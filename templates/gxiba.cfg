#! This file is a template for the gxiba tool to create the initial configuration file.
#! Please do not edit this file unless adding further functionalities to the gxiba project
#! Any addition to this config file should be matched with a type declaration on templates/gxiba_types.cfg


[core]
# Path to service account keys. Currently tested only for Google Cloud Services.
# If declared, this will override cloud-storage.service_account_keys_location and bigquery.service_account_keys_location
service_account_keys_location :


[database]
# Database connectivity is based on the SQLAlchemy model, so any supported database type + driver can be replaced
# here thus allowing flexibility to use any preferred backend. For more information, please see
# https://docs.sqlalchemy.org/en/20/dialects/index.html
drivername : sqlite
# Connectivity information to reach database, defaults as empty to allow the sqlite database file creation without
# issues.
host :
port :
username :
password :
schema :
database : gxiba.db

# Setting as true will output into terminal all the SQL queries constructed
echo_sql : False
# This parameter defines the way to handle a duplicate record.
# Possible values: 'ignore', 'overwrite', 'fail'.
handle_duplicates : ignore

[logs]
log_filename : %%Y-%%m-%%d_%%H_%%M.log
log_format : {asctime}-{levelname:.<9}:{name:.<25}...{message}
log_style : {
file_log_level : DEBUG

[cloud-storage]
activate : False
driver :
bucket_name :
# Path to service account keys. Currently tested only for Google Cloud Services
service_account_keys_location :
# This parameter defines the way to handle a duplicate record.
# Possible values: 'ignore', 'overwrite', 'fail'.
handle_duplicates : ignore

[bigquery]
activate : False
# Path to service account keys. Currently tested only for Google Cloud Services.
service_account_keys_location :
